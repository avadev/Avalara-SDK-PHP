<?php
/**
 * Form1099K
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Avalara\SDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/*
 * AvaTax Software Development Kit for PHP
 *
 * (c) 2004-2025 Avalara, Inc.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * Avalara 1099 & W-9 API Definition
 *
 * ## 🔐 Authentication  Use **username/password** or generate a **license key** from: *Avalara Portal → Settings → License and API Keys*.  [More on authentication methods](https://developer.avalara.com/avatax-dm-combined-erp/common-setup/authentication/authentication-methods/)  [Test your credentials](https://developer.avalara.com/avatax/test-credentials/)  ## 📘 API & SDK Documentation  [Avalara SDK (.NET) on GitHub](https://github.com/avadev/Avalara-SDK-DotNet#avalarasdk--the-unified-c-library-for-next-gen-avalara-services)  [Code Examples – 1099 API](https://github.com/avadev/Avalara-SDK-DotNet/blob/main/docs/A1099/V2/Class1099IssuersApi.md#call1099issuersget)
 *
 * @category   Avalara client libraries
 * @package    Avalara\SDK\API\A1099\V2
 * @author     Sachin Baijal <sachin.baijal@avalara.com>
 * @author     Jonathan Wenger <jonathan.wenger@avalara.com>
 * @copyright  2004-2025 Avalara, Inc.
 * @license    https://www.apache.org/licenses/LICENSE-2.0
 * @link       https://github.com/avadev/AvaTax-REST-V3-PHP-SDK

 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Avalara\SDK\Model\A1099\V2;

use \ArrayAccess;
use \Avalara\SDK\ObjectSerializer;
use \Avalara\SDK\Model\ModelInterface;
/**
 * Form1099K Class Doc Comment
 *
 * @category Class
 * @package  Avalara\SDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class Form1099K implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Form1099K';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'filer_type' => 'string',
        'payment_type' => 'string',
        'payment_settlement_entity_name_phone_number' => 'string',
        'gross_amount_payment_card' => 'float',
        'card_not_present_transactions' => 'float',
        'merchant_category_code' => 'string',
        'payment_transaction_number' => 'float',
        'federal_income_tax_withheld' => 'float',
        'january' => 'float',
        'february' => 'float',
        'march' => 'float',
        'april' => 'float',
        'may' => 'float',
        'june' => 'float',
        'july' => 'float',
        'august' => 'float',
        'sept' => 'float',
        'october' => 'float',
        'november' => 'float',
        'december' => 'float',
        'id' => 'string',
        'type' => 'string',
        'issuer_id' => 'int',
        'issuer_reference_id' => 'string',
        'issuer_tin' => 'string',
        'tax_year' => 'int',
        'federal_efile' => 'bool',
        'federal_efile_status' => '\Avalara\SDK\Model\A1099\V2\Form1099StatusDetail',
        'state_efile' => 'bool',
        'state_efile_status' => '\Avalara\SDK\Model\A1099\V2\StateEfileStatusDetail[]',
        'postal_mail' => 'bool',
        'postal_mail_status' => '\Avalara\SDK\Model\A1099\V2\Form1099StatusDetail',
        'tin_match' => 'bool',
        'tin_match_status' => '\Avalara\SDK\Model\A1099\V2\Form1099StatusDetail',
        'address_verification' => 'bool',
        'address_verification_status' => '\Avalara\SDK\Model\A1099\V2\Form1099StatusDetail',
        'reference_id' => 'string',
        'email' => 'string',
        'type_of_tin' => 'string',
        'tin' => 'string',
        'first_payee_name' => 'string',
        'second_payee_name' => 'string',
        'address' => 'string',
        'address_recipient_second' => 'string',
        'city' => 'string',
        'state' => 'string',
        'zip' => 'string',
        'foreign_province' => 'string',
        'country_code' => 'string',
        'validation_errors' => '\Avalara\SDK\Model\A1099\V2\ValidationError[]',
        'created_at' => '\DateTime',
        'updated_at' => '\DateTime',
        'state_and_local_withholding' => '\Avalara\SDK\Model\A1099\V2\StateAndLocalWithholding'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'filer_type' => null,
        'payment_type' => null,
        'payment_settlement_entity_name_phone_number' => null,
        'gross_amount_payment_card' => 'double',
        'card_not_present_transactions' => 'double',
        'merchant_category_code' => null,
        'payment_transaction_number' => 'double',
        'federal_income_tax_withheld' => 'double',
        'january' => 'double',
        'february' => 'double',
        'march' => 'double',
        'april' => 'double',
        'may' => 'double',
        'june' => 'double',
        'july' => 'double',
        'august' => 'double',
        'sept' => 'double',
        'october' => 'double',
        'november' => 'double',
        'december' => 'double',
        'id' => null,
        'type' => null,
        'issuer_id' => 'int32',
        'issuer_reference_id' => null,
        'issuer_tin' => null,
        'tax_year' => 'int32',
        'federal_efile' => null,
        'federal_efile_status' => null,
        'state_efile' => null,
        'state_efile_status' => null,
        'postal_mail' => null,
        'postal_mail_status' => null,
        'tin_match' => null,
        'tin_match_status' => null,
        'address_verification' => null,
        'address_verification_status' => null,
        'reference_id' => null,
        'email' => null,
        'type_of_tin' => null,
        'tin' => null,
        'first_payee_name' => null,
        'second_payee_name' => null,
        'address' => null,
        'address_recipient_second' => null,
        'city' => null,
        'state' => null,
        'zip' => null,
        'foreign_province' => null,
        'country_code' => null,
        'validation_errors' => null,
        'created_at' => 'date-time',
        'updated_at' => 'date-time',
        'state_and_local_withholding' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'filer_type' => 'filerType',
        'payment_type' => 'paymentType',
        'payment_settlement_entity_name_phone_number' => 'paymentSettlementEntityNamePhoneNumber',
        'gross_amount_payment_card' => 'grossAmountPaymentCard',
        'card_not_present_transactions' => 'cardNotPresentTransactions',
        'merchant_category_code' => 'merchantCategoryCode',
        'payment_transaction_number' => 'paymentTransactionNumber',
        'federal_income_tax_withheld' => 'federalIncomeTaxWithheld',
        'january' => 'january',
        'february' => 'february',
        'march' => 'march',
        'april' => 'april',
        'may' => 'may',
        'june' => 'june',
        'july' => 'july',
        'august' => 'august',
        'sept' => 'sept',
        'october' => 'october',
        'november' => 'november',
        'december' => 'december',
        'id' => 'id',
        'type' => 'type',
        'issuer_id' => 'issuerId',
        'issuer_reference_id' => 'issuerReferenceId',
        'issuer_tin' => 'issuerTin',
        'tax_year' => 'taxYear',
        'federal_efile' => 'federalEfile',
        'federal_efile_status' => 'federalEfileStatus',
        'state_efile' => 'stateEfile',
        'state_efile_status' => 'stateEfileStatus',
        'postal_mail' => 'postalMail',
        'postal_mail_status' => 'postalMailStatus',
        'tin_match' => 'tinMatch',
        'tin_match_status' => 'tinMatchStatus',
        'address_verification' => 'addressVerification',
        'address_verification_status' => 'addressVerificationStatus',
        'reference_id' => 'referenceId',
        'email' => 'email',
        'type_of_tin' => 'typeOfTin',
        'tin' => 'tin',
        'first_payee_name' => 'firstPayeeName',
        'second_payee_name' => 'secondPayeeName',
        'address' => 'address',
        'address_recipient_second' => 'addressRecipientSecond',
        'city' => 'city',
        'state' => 'state',
        'zip' => 'zip',
        'foreign_province' => 'foreignProvince',
        'country_code' => 'countryCode',
        'validation_errors' => 'validationErrors',
        'created_at' => 'createdAt',
        'updated_at' => 'updatedAt',
        'state_and_local_withholding' => 'stateAndLocalWithholding'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'filer_type' => 'setFilerType',
        'payment_type' => 'setPaymentType',
        'payment_settlement_entity_name_phone_number' => 'setPaymentSettlementEntityNamePhoneNumber',
        'gross_amount_payment_card' => 'setGrossAmountPaymentCard',
        'card_not_present_transactions' => 'setCardNotPresentTransactions',
        'merchant_category_code' => 'setMerchantCategoryCode',
        'payment_transaction_number' => 'setPaymentTransactionNumber',
        'federal_income_tax_withheld' => 'setFederalIncomeTaxWithheld',
        'january' => 'setJanuary',
        'february' => 'setFebruary',
        'march' => 'setMarch',
        'april' => 'setApril',
        'may' => 'setMay',
        'june' => 'setJune',
        'july' => 'setJuly',
        'august' => 'setAugust',
        'sept' => 'setSept',
        'october' => 'setOctober',
        'november' => 'setNovember',
        'december' => 'setDecember',
        'id' => 'setId',
        'type' => 'setType',
        'issuer_id' => 'setIssuerId',
        'issuer_reference_id' => 'setIssuerReferenceId',
        'issuer_tin' => 'setIssuerTin',
        'tax_year' => 'setTaxYear',
        'federal_efile' => 'setFederalEfile',
        'federal_efile_status' => 'setFederalEfileStatus',
        'state_efile' => 'setStateEfile',
        'state_efile_status' => 'setStateEfileStatus',
        'postal_mail' => 'setPostalMail',
        'postal_mail_status' => 'setPostalMailStatus',
        'tin_match' => 'setTinMatch',
        'tin_match_status' => 'setTinMatchStatus',
        'address_verification' => 'setAddressVerification',
        'address_verification_status' => 'setAddressVerificationStatus',
        'reference_id' => 'setReferenceId',
        'email' => 'setEmail',
        'type_of_tin' => 'setTypeOfTin',
        'tin' => 'setTin',
        'first_payee_name' => 'setFirstPayeeName',
        'second_payee_name' => 'setSecondPayeeName',
        'address' => 'setAddress',
        'address_recipient_second' => 'setAddressRecipientSecond',
        'city' => 'setCity',
        'state' => 'setState',
        'zip' => 'setZip',
        'foreign_province' => 'setForeignProvince',
        'country_code' => 'setCountryCode',
        'validation_errors' => 'setValidationErrors',
        'created_at' => 'setCreatedAt',
        'updated_at' => 'setUpdatedAt',
        'state_and_local_withholding' => 'setStateAndLocalWithholding'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'filer_type' => 'getFilerType',
        'payment_type' => 'getPaymentType',
        'payment_settlement_entity_name_phone_number' => 'getPaymentSettlementEntityNamePhoneNumber',
        'gross_amount_payment_card' => 'getGrossAmountPaymentCard',
        'card_not_present_transactions' => 'getCardNotPresentTransactions',
        'merchant_category_code' => 'getMerchantCategoryCode',
        'payment_transaction_number' => 'getPaymentTransactionNumber',
        'federal_income_tax_withheld' => 'getFederalIncomeTaxWithheld',
        'january' => 'getJanuary',
        'february' => 'getFebruary',
        'march' => 'getMarch',
        'april' => 'getApril',
        'may' => 'getMay',
        'june' => 'getJune',
        'july' => 'getJuly',
        'august' => 'getAugust',
        'sept' => 'getSept',
        'october' => 'getOctober',
        'november' => 'getNovember',
        'december' => 'getDecember',
        'id' => 'getId',
        'type' => 'getType',
        'issuer_id' => 'getIssuerId',
        'issuer_reference_id' => 'getIssuerReferenceId',
        'issuer_tin' => 'getIssuerTin',
        'tax_year' => 'getTaxYear',
        'federal_efile' => 'getFederalEfile',
        'federal_efile_status' => 'getFederalEfileStatus',
        'state_efile' => 'getStateEfile',
        'state_efile_status' => 'getStateEfileStatus',
        'postal_mail' => 'getPostalMail',
        'postal_mail_status' => 'getPostalMailStatus',
        'tin_match' => 'getTinMatch',
        'tin_match_status' => 'getTinMatchStatus',
        'address_verification' => 'getAddressVerification',
        'address_verification_status' => 'getAddressVerificationStatus',
        'reference_id' => 'getReferenceId',
        'email' => 'getEmail',
        'type_of_tin' => 'getTypeOfTin',
        'tin' => 'getTin',
        'first_payee_name' => 'getFirstPayeeName',
        'second_payee_name' => 'getSecondPayeeName',
        'address' => 'getAddress',
        'address_recipient_second' => 'getAddressRecipientSecond',
        'city' => 'getCity',
        'state' => 'getState',
        'zip' => 'getZip',
        'foreign_province' => 'getForeignProvince',
        'country_code' => 'getCountryCode',
        'validation_errors' => 'getValidationErrors',
        'created_at' => 'getCreatedAt',
        'updated_at' => 'getUpdatedAt',
        'state_and_local_withholding' => 'getStateAndLocalWithholding'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    const FILER_TYPE_PSE = 'PSE';
    const FILER_TYPE_EPF = 'EPF';
    const FILER_TYPE_OTHER = 'Other';
    const PAYMENT_TYPE_MERCHANT_PAYMENT_CARD = 'MerchantPaymentCard';
    const PAYMENT_TYPE_THIRD_PARTY_NETWORK = 'ThirdPartyNetwork';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getFilerTypeAllowableValues()
    {
        return [
            self::FILER_TYPE_PSE,
            self::FILER_TYPE_EPF,
            self::FILER_TYPE_OTHER,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getPaymentTypeAllowableValues()
    {
        return [
            self::PAYMENT_TYPE_MERCHANT_PAYMENT_CARD,
            self::PAYMENT_TYPE_THIRD_PARTY_NETWORK,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['filer_type'] = $data['filer_type'] ?? null;
        $this->container['payment_type'] = $data['payment_type'] ?? null;
        $this->container['payment_settlement_entity_name_phone_number'] = $data['payment_settlement_entity_name_phone_number'] ?? null;
        $this->container['gross_amount_payment_card'] = $data['gross_amount_payment_card'] ?? null;
        $this->container['card_not_present_transactions'] = $data['card_not_present_transactions'] ?? null;
        $this->container['merchant_category_code'] = $data['merchant_category_code'] ?? null;
        $this->container['payment_transaction_number'] = $data['payment_transaction_number'] ?? null;
        $this->container['federal_income_tax_withheld'] = $data['federal_income_tax_withheld'] ?? null;
        $this->container['january'] = $data['january'] ?? null;
        $this->container['february'] = $data['february'] ?? null;
        $this->container['march'] = $data['march'] ?? null;
        $this->container['april'] = $data['april'] ?? null;
        $this->container['may'] = $data['may'] ?? null;
        $this->container['june'] = $data['june'] ?? null;
        $this->container['july'] = $data['july'] ?? null;
        $this->container['august'] = $data['august'] ?? null;
        $this->container['sept'] = $data['sept'] ?? null;
        $this->container['october'] = $data['october'] ?? null;
        $this->container['november'] = $data['november'] ?? null;
        $this->container['december'] = $data['december'] ?? null;
        $this->container['id'] = $data['id'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['issuer_id'] = $data['issuer_id'] ?? null;
        $this->container['issuer_reference_id'] = $data['issuer_reference_id'] ?? null;
        $this->container['issuer_tin'] = $data['issuer_tin'] ?? null;
        $this->container['tax_year'] = $data['tax_year'] ?? null;
        $this->container['federal_efile'] = $data['federal_efile'] ?? null;
        $this->container['federal_efile_status'] = $data['federal_efile_status'] ?? null;
        $this->container['state_efile'] = $data['state_efile'] ?? null;
        $this->container['state_efile_status'] = $data['state_efile_status'] ?? null;
        $this->container['postal_mail'] = $data['postal_mail'] ?? null;
        $this->container['postal_mail_status'] = $data['postal_mail_status'] ?? null;
        $this->container['tin_match'] = $data['tin_match'] ?? null;
        $this->container['tin_match_status'] = $data['tin_match_status'] ?? null;
        $this->container['address_verification'] = $data['address_verification'] ?? null;
        $this->container['address_verification_status'] = $data['address_verification_status'] ?? null;
        $this->container['reference_id'] = $data['reference_id'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['type_of_tin'] = $data['type_of_tin'] ?? null;
        $this->container['tin'] = $data['tin'] ?? null;
        $this->container['first_payee_name'] = $data['first_payee_name'] ?? null;
        $this->container['second_payee_name'] = $data['second_payee_name'] ?? null;
        $this->container['address'] = $data['address'] ?? null;
        $this->container['address_recipient_second'] = $data['address_recipient_second'] ?? null;
        $this->container['city'] = $data['city'] ?? null;
        $this->container['state'] = $data['state'] ?? null;
        $this->container['zip'] = $data['zip'] ?? null;
        $this->container['foreign_province'] = $data['foreign_province'] ?? null;
        $this->container['country_code'] = $data['country_code'] ?? null;
        $this->container['validation_errors'] = $data['validation_errors'] ?? null;
        $this->container['created_at'] = $data['created_at'] ?? null;
        $this->container['updated_at'] = $data['updated_at'] ?? null;
        $this->container['state_and_local_withholding'] = $data['state_and_local_withholding'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getFilerTypeAllowableValues();
        if (!is_null($this->container['filer_type']) && !in_array($this->container['filer_type'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'filer_type', must be one of '%s'",
                $this->container['filer_type'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getPaymentTypeAllowableValues();
        if (!is_null($this->container['payment_type']) && !in_array($this->container['payment_type'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'payment_type', must be one of '%s'",
                $this->container['payment_type'],
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets filer_type
     *
     * @return string|null
     */
    public function getFilerType()
    {
        return $this->container['filer_type'];
    }

    /**
     * Sets filer_type
     *
     * @param string|null $filer_type filer_type
     *
     * @return self
     */
    public function setFilerType($filer_type)
    {
        $allowedValues = $this->getFilerTypeAllowableValues();
        if (!is_null($filer_type) && !in_array($filer_type, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'filer_type', must be one of '%s'",
                    $filer_type,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['filer_type'] = $filer_type;

        return $this;
    }

    /**
     * Gets payment_type
     *
     * @return string|null
     */
    public function getPaymentType()
    {
        return $this->container['payment_type'];
    }

    /**
     * Sets payment_type
     *
     * @param string|null $payment_type payment_type
     *
     * @return self
     */
    public function setPaymentType($payment_type)
    {
        $allowedValues = $this->getPaymentTypeAllowableValues();
        if (!is_null($payment_type) && !in_array($payment_type, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'payment_type', must be one of '%s'",
                    $payment_type,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['payment_type'] = $payment_type;

        return $this;
    }

    /**
     * Gets payment_settlement_entity_name_phone_number
     *
     * @return string|null
     */
    public function getPaymentSettlementEntityNamePhoneNumber()
    {
        return $this->container['payment_settlement_entity_name_phone_number'];
    }

    /**
     * Sets payment_settlement_entity_name_phone_number
     *
     * @param string|null $payment_settlement_entity_name_phone_number payment_settlement_entity_name_phone_number
     *
     * @return self
     */
    public function setPaymentSettlementEntityNamePhoneNumber($payment_settlement_entity_name_phone_number)
    {
        $this->container['payment_settlement_entity_name_phone_number'] = $payment_settlement_entity_name_phone_number;

        return $this;
    }

    /**
     * Gets gross_amount_payment_card
     *
     * @return float|null
     */
    public function getGrossAmountPaymentCard()
    {
        return $this->container['gross_amount_payment_card'];
    }

    /**
     * Sets gross_amount_payment_card
     *
     * @param float|null $gross_amount_payment_card gross_amount_payment_card
     *
     * @return self
     */
    public function setGrossAmountPaymentCard($gross_amount_payment_card)
    {
        $this->container['gross_amount_payment_card'] = $gross_amount_payment_card;

        return $this;
    }

    /**
     * Gets card_not_present_transactions
     *
     * @return float|null
     */
    public function getCardNotPresentTransactions()
    {
        return $this->container['card_not_present_transactions'];
    }

    /**
     * Sets card_not_present_transactions
     *
     * @param float|null $card_not_present_transactions card_not_present_transactions
     *
     * @return self
     */
    public function setCardNotPresentTransactions($card_not_present_transactions)
    {
        $this->container['card_not_present_transactions'] = $card_not_present_transactions;

        return $this;
    }

    /**
     * Gets merchant_category_code
     *
     * @return string|null
     */
    public function getMerchantCategoryCode()
    {
        return $this->container['merchant_category_code'];
    }

    /**
     * Sets merchant_category_code
     *
     * @param string|null $merchant_category_code merchant_category_code
     *
     * @return self
     */
    public function setMerchantCategoryCode($merchant_category_code)
    {
        $this->container['merchant_category_code'] = $merchant_category_code;

        return $this;
    }

    /**
     * Gets payment_transaction_number
     *
     * @return float|null
     */
    public function getPaymentTransactionNumber()
    {
        return $this->container['payment_transaction_number'];
    }

    /**
     * Sets payment_transaction_number
     *
     * @param float|null $payment_transaction_number payment_transaction_number
     *
     * @return self
     */
    public function setPaymentTransactionNumber($payment_transaction_number)
    {
        $this->container['payment_transaction_number'] = $payment_transaction_number;

        return $this;
    }

    /**
     * Gets federal_income_tax_withheld
     *
     * @return float|null
     */
    public function getFederalIncomeTaxWithheld()
    {
        return $this->container['federal_income_tax_withheld'];
    }

    /**
     * Sets federal_income_tax_withheld
     *
     * @param float|null $federal_income_tax_withheld federal_income_tax_withheld
     *
     * @return self
     */
    public function setFederalIncomeTaxWithheld($federal_income_tax_withheld)
    {
        $this->container['federal_income_tax_withheld'] = $federal_income_tax_withheld;

        return $this;
    }

    /**
     * Gets january
     *
     * @return float|null
     */
    public function getJanuary()
    {
        return $this->container['january'];
    }

    /**
     * Sets january
     *
     * @param float|null $january january
     *
     * @return self
     */
    public function setJanuary($january)
    {
        $this->container['january'] = $january;

        return $this;
    }

    /**
     * Gets february
     *
     * @return float|null
     */
    public function getFebruary()
    {
        return $this->container['february'];
    }

    /**
     * Sets february
     *
     * @param float|null $february february
     *
     * @return self
     */
    public function setFebruary($february)
    {
        $this->container['february'] = $february;

        return $this;
    }

    /**
     * Gets march
     *
     * @return float|null
     */
    public function getMarch()
    {
        return $this->container['march'];
    }

    /**
     * Sets march
     *
     * @param float|null $march march
     *
     * @return self
     */
    public function setMarch($march)
    {
        $this->container['march'] = $march;

        return $this;
    }

    /**
     * Gets april
     *
     * @return float|null
     */
    public function getApril()
    {
        return $this->container['april'];
    }

    /**
     * Sets april
     *
     * @param float|null $april april
     *
     * @return self
     */
    public function setApril($april)
    {
        $this->container['april'] = $april;

        return $this;
    }

    /**
     * Gets may
     *
     * @return float|null
     */
    public function getMay()
    {
        return $this->container['may'];
    }

    /**
     * Sets may
     *
     * @param float|null $may may
     *
     * @return self
     */
    public function setMay($may)
    {
        $this->container['may'] = $may;

        return $this;
    }

    /**
     * Gets june
     *
     * @return float|null
     */
    public function getJune()
    {
        return $this->container['june'];
    }

    /**
     * Sets june
     *
     * @param float|null $june june
     *
     * @return self
     */
    public function setJune($june)
    {
        $this->container['june'] = $june;

        return $this;
    }

    /**
     * Gets july
     *
     * @return float|null
     */
    public function getJuly()
    {
        return $this->container['july'];
    }

    /**
     * Sets july
     *
     * @param float|null $july july
     *
     * @return self
     */
    public function setJuly($july)
    {
        $this->container['july'] = $july;

        return $this;
    }

    /**
     * Gets august
     *
     * @return float|null
     */
    public function getAugust()
    {
        return $this->container['august'];
    }

    /**
     * Sets august
     *
     * @param float|null $august august
     *
     * @return self
     */
    public function setAugust($august)
    {
        $this->container['august'] = $august;

        return $this;
    }

    /**
     * Gets sept
     *
     * @return float|null
     */
    public function getSept()
    {
        return $this->container['sept'];
    }

    /**
     * Sets sept
     *
     * @param float|null $sept sept
     *
     * @return self
     */
    public function setSept($sept)
    {
        $this->container['sept'] = $sept;

        return $this;
    }

    /**
     * Gets october
     *
     * @return float|null
     */
    public function getOctober()
    {
        return $this->container['october'];
    }

    /**
     * Sets october
     *
     * @param float|null $october october
     *
     * @return self
     */
    public function setOctober($october)
    {
        $this->container['october'] = $october;

        return $this;
    }

    /**
     * Gets november
     *
     * @return float|null
     */
    public function getNovember()
    {
        return $this->container['november'];
    }

    /**
     * Sets november
     *
     * @param float|null $november november
     *
     * @return self
     */
    public function setNovember($november)
    {
        $this->container['november'] = $november;

        return $this;
    }

    /**
     * Gets december
     *
     * @return float|null
     */
    public function getDecember()
    {
        return $this->container['december'];
    }

    /**
     * Sets december
     *
     * @param float|null $december december
     *
     * @return self
     */
    public function setDecember($december)
    {
        $this->container['december'] = $december;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets issuer_id
     *
     * @return int|null
     */
    public function getIssuerId()
    {
        return $this->container['issuer_id'];
    }

    /**
     * Sets issuer_id
     *
     * @param int|null $issuer_id issuer_id
     *
     * @return self
     */
    public function setIssuerId($issuer_id)
    {
        $this->container['issuer_id'] = $issuer_id;

        return $this;
    }

    /**
     * Gets issuer_reference_id
     *
     * @return string|null
     */
    public function getIssuerReferenceId()
    {
        return $this->container['issuer_reference_id'];
    }

    /**
     * Sets issuer_reference_id
     *
     * @param string|null $issuer_reference_id issuer_reference_id
     *
     * @return self
     */
    public function setIssuerReferenceId($issuer_reference_id)
    {
        $this->container['issuer_reference_id'] = $issuer_reference_id;

        return $this;
    }

    /**
     * Gets issuer_tin
     *
     * @return string|null
     */
    public function getIssuerTin()
    {
        return $this->container['issuer_tin'];
    }

    /**
     * Sets issuer_tin
     *
     * @param string|null $issuer_tin issuer_tin
     *
     * @return self
     */
    public function setIssuerTin($issuer_tin)
    {
        $this->container['issuer_tin'] = $issuer_tin;

        return $this;
    }

    /**
     * Gets tax_year
     *
     * @return int|null
     */
    public function getTaxYear()
    {
        return $this->container['tax_year'];
    }

    /**
     * Sets tax_year
     *
     * @param int|null $tax_year tax_year
     *
     * @return self
     */
    public function setTaxYear($tax_year)
    {
        $this->container['tax_year'] = $tax_year;

        return $this;
    }

    /**
     * Gets federal_efile
     *
     * @return bool|null
     */
    public function getFederalEfile()
    {
        return $this->container['federal_efile'];
    }

    /**
     * Sets federal_efile
     *
     * @param bool|null $federal_efile federal_efile
     *
     * @return self
     */
    public function setFederalEfile($federal_efile)
    {
        $this->container['federal_efile'] = $federal_efile;

        return $this;
    }

    /**
     * Gets federal_efile_status
     *
     * @return \Avalara\SDK\Model\A1099\V2\Form1099StatusDetail|null
     */
    public function getFederalEfileStatus()
    {
        return $this->container['federal_efile_status'];
    }

    /**
     * Sets federal_efile_status
     *
     * @param \Avalara\SDK\Model\A1099\V2\Form1099StatusDetail|null $federal_efile_status federal_efile_status
     *
     * @return self
     */
    public function setFederalEfileStatus($federal_efile_status)
    {
        $this->container['federal_efile_status'] = $federal_efile_status;

        return $this;
    }

    /**
     * Gets state_efile
     *
     * @return bool|null
     */
    public function getStateEfile()
    {
        return $this->container['state_efile'];
    }

    /**
     * Sets state_efile
     *
     * @param bool|null $state_efile state_efile
     *
     * @return self
     */
    public function setStateEfile($state_efile)
    {
        $this->container['state_efile'] = $state_efile;

        return $this;
    }

    /**
     * Gets state_efile_status
     *
     * @return \Avalara\SDK\Model\A1099\V2\StateEfileStatusDetail[]|null
     */
    public function getStateEfileStatus()
    {
        return $this->container['state_efile_status'];
    }

    /**
     * Sets state_efile_status
     *
     * @param \Avalara\SDK\Model\A1099\V2\StateEfileStatusDetail[]|null $state_efile_status state_efile_status
     *
     * @return self
     */
    public function setStateEfileStatus($state_efile_status)
    {


        $this->container['state_efile_status'] = $state_efile_status;

        return $this;
    }

    /**
     * Gets postal_mail
     *
     * @return bool|null
     */
    public function getPostalMail()
    {
        return $this->container['postal_mail'];
    }

    /**
     * Sets postal_mail
     *
     * @param bool|null $postal_mail postal_mail
     *
     * @return self
     */
    public function setPostalMail($postal_mail)
    {
        $this->container['postal_mail'] = $postal_mail;

        return $this;
    }

    /**
     * Gets postal_mail_status
     *
     * @return \Avalara\SDK\Model\A1099\V2\Form1099StatusDetail|null
     */
    public function getPostalMailStatus()
    {
        return $this->container['postal_mail_status'];
    }

    /**
     * Sets postal_mail_status
     *
     * @param \Avalara\SDK\Model\A1099\V2\Form1099StatusDetail|null $postal_mail_status postal_mail_status
     *
     * @return self
     */
    public function setPostalMailStatus($postal_mail_status)
    {
        $this->container['postal_mail_status'] = $postal_mail_status;

        return $this;
    }

    /**
     * Gets tin_match
     *
     * @return bool|null
     */
    public function getTinMatch()
    {
        return $this->container['tin_match'];
    }

    /**
     * Sets tin_match
     *
     * @param bool|null $tin_match tin_match
     *
     * @return self
     */
    public function setTinMatch($tin_match)
    {
        $this->container['tin_match'] = $tin_match;

        return $this;
    }

    /**
     * Gets tin_match_status
     *
     * @return \Avalara\SDK\Model\A1099\V2\Form1099StatusDetail|null
     */
    public function getTinMatchStatus()
    {
        return $this->container['tin_match_status'];
    }

    /**
     * Sets tin_match_status
     *
     * @param \Avalara\SDK\Model\A1099\V2\Form1099StatusDetail|null $tin_match_status tin_match_status
     *
     * @return self
     */
    public function setTinMatchStatus($tin_match_status)
    {
        $this->container['tin_match_status'] = $tin_match_status;

        return $this;
    }

    /**
     * Gets address_verification
     *
     * @return bool|null
     */
    public function getAddressVerification()
    {
        return $this->container['address_verification'];
    }

    /**
     * Sets address_verification
     *
     * @param bool|null $address_verification address_verification
     *
     * @return self
     */
    public function setAddressVerification($address_verification)
    {
        $this->container['address_verification'] = $address_verification;

        return $this;
    }

    /**
     * Gets address_verification_status
     *
     * @return \Avalara\SDK\Model\A1099\V2\Form1099StatusDetail|null
     */
    public function getAddressVerificationStatus()
    {
        return $this->container['address_verification_status'];
    }

    /**
     * Sets address_verification_status
     *
     * @param \Avalara\SDK\Model\A1099\V2\Form1099StatusDetail|null $address_verification_status address_verification_status
     *
     * @return self
     */
    public function setAddressVerificationStatus($address_verification_status)
    {
        $this->container['address_verification_status'] = $address_verification_status;

        return $this;
    }

    /**
     * Gets reference_id
     *
     * @return string|null
     */
    public function getReferenceId()
    {
        return $this->container['reference_id'];
    }

    /**
     * Sets reference_id
     *
     * @param string|null $reference_id reference_id
     *
     * @return self
     */
    public function setReferenceId($reference_id)
    {
        $this->container['reference_id'] = $reference_id;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email email
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets type_of_tin
     *
     * @return string|null
     */
    public function getTypeOfTin()
    {
        return $this->container['type_of_tin'];
    }

    /**
     * Sets type_of_tin
     *
     * @param string|null $type_of_tin type_of_tin
     *
     * @return self
     */
    public function setTypeOfTin($type_of_tin)
    {
        $this->container['type_of_tin'] = $type_of_tin;

        return $this;
    }

    /**
     * Gets tin
     *
     * @return string|null
     */
    public function getTin()
    {
        return $this->container['tin'];
    }

    /**
     * Sets tin
     *
     * @param string|null $tin tin
     *
     * @return self
     */
    public function setTin($tin)
    {
        $this->container['tin'] = $tin;

        return $this;
    }

    /**
     * Gets first_payee_name
     *
     * @return string|null
     */
    public function getFirstPayeeName()
    {
        return $this->container['first_payee_name'];
    }

    /**
     * Sets first_payee_name
     *
     * @param string|null $first_payee_name first_payee_name
     *
     * @return self
     */
    public function setFirstPayeeName($first_payee_name)
    {
        $this->container['first_payee_name'] = $first_payee_name;

        return $this;
    }

    /**
     * Gets second_payee_name
     *
     * @return string|null
     */
    public function getSecondPayeeName()
    {
        return $this->container['second_payee_name'];
    }

    /**
     * Sets second_payee_name
     *
     * @param string|null $second_payee_name second_payee_name
     *
     * @return self
     */
    public function setSecondPayeeName($second_payee_name)
    {
        $this->container['second_payee_name'] = $second_payee_name;

        return $this;
    }

    /**
     * Gets address
     *
     * @return string|null
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param string|null $address address
     *
     * @return self
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets address_recipient_second
     *
     * @return string|null
     */
    public function getAddressRecipientSecond()
    {
        return $this->container['address_recipient_second'];
    }

    /**
     * Sets address_recipient_second
     *
     * @param string|null $address_recipient_second address_recipient_second
     *
     * @return self
     */
    public function setAddressRecipientSecond($address_recipient_second)
    {
        $this->container['address_recipient_second'] = $address_recipient_second;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string|null
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string|null $city city
     *
     * @return self
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string|null
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string|null $state state
     *
     * @return self
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets zip
     *
     * @return string|null
     */
    public function getZip()
    {
        return $this->container['zip'];
    }

    /**
     * Sets zip
     *
     * @param string|null $zip zip
     *
     * @return self
     */
    public function setZip($zip)
    {
        $this->container['zip'] = $zip;

        return $this;
    }

    /**
     * Gets foreign_province
     *
     * @return string|null
     */
    public function getForeignProvince()
    {
        return $this->container['foreign_province'];
    }

    /**
     * Sets foreign_province
     *
     * @param string|null $foreign_province foreign_province
     *
     * @return self
     */
    public function setForeignProvince($foreign_province)
    {
        $this->container['foreign_province'] = $foreign_province;

        return $this;
    }

    /**
     * Gets country_code
     *
     * @return string|null
     */
    public function getCountryCode()
    {
        return $this->container['country_code'];
    }

    /**
     * Sets country_code
     *
     * @param string|null $country_code country_code
     *
     * @return self
     */
    public function setCountryCode($country_code)
    {
        $this->container['country_code'] = $country_code;

        return $this;
    }

    /**
     * Gets validation_errors
     *
     * @return \Avalara\SDK\Model\A1099\V2\ValidationError[]|null
     */
    public function getValidationErrors()
    {
        return $this->container['validation_errors'];
    }

    /**
     * Sets validation_errors
     *
     * @param \Avalara\SDK\Model\A1099\V2\ValidationError[]|null $validation_errors validation_errors
     *
     * @return self
     */
    public function setValidationErrors($validation_errors)
    {


        $this->container['validation_errors'] = $validation_errors;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return \DateTime|null
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param \DateTime|null $created_at created_at
     *
     * @return self
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return \DateTime|null
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param \DateTime|null $updated_at updated_at
     *
     * @return self
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets state_and_local_withholding
     *
     * @return \Avalara\SDK\Model\A1099\V2\StateAndLocalWithholding|null
     */
    public function getStateAndLocalWithholding()
    {
        return $this->container['state_and_local_withholding'];
    }

    /**
     * Sets state_and_local_withholding
     *
     * @param \Avalara\SDK\Model\A1099\V2\StateAndLocalWithholding|null $state_and_local_withholding state_and_local_withholding
     *
     * @return self
     */
    public function setStateAndLocalWithholding($state_and_local_withholding)
    {
        $this->container['state_and_local_withholding'] = $state_and_local_withholding;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset):bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset):mixed
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value):void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset):void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize():mixed
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString():string
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue():string
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


