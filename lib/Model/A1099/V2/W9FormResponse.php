<?php
/**
 * W9FormResponse
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Avalara\SDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/*
 * AvaTax Software Development Kit for PHP
 *
 * (c) 2004-2025 Avalara, Inc.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * Avalara 1099 & W-9 API Definition
 *
 * ## 🔐 Authentication  Generate a **license key** from: *[Avalara Portal](https://www.avalara.com/us/en/signin.html) → Settings → License and API Keys*.  [More on authentication methods](https://developer.avalara.com/avatax-dm-combined-erp/common-setup/authentication/authentication-methods/)  [Test your credentials](https://developer.avalara.com/avatax/test-credentials/)  ## 📘 API & SDK Documentation  [Avalara SDK (.NET) on GitHub](https://github.com/avadev/Avalara-SDK-DotNet#avalarasdk--the-unified-c-library-for-next-gen-avalara-services)  [Code Examples – 1099 API](https://github.com/avadev/Avalara-SDK-DotNet/blob/main/docs/A1099/V2/Class1099IssuersApi.md#call1099issuersget)
 *
 * @category   Avalara client libraries
 * @package    Avalara\SDK\API\A1099\V2
 * @author     Sachin Baijal <sachin.baijal@avalara.com>
 * @author     Jonathan Wenger <jonathan.wenger@avalara.com>
 * @copyright  2004-2025 Avalara, Inc.
 * @license    https://www.apache.org/licenses/LICENSE-2.0
 * @link       https://github.com/avadev/AvaTax-REST-V3-PHP-SDK

 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Avalara\SDK\Model\A1099\V2;
use \Avalara\SDK\ObjectSerializer;
use \Avalara\SDK\Model\ModelInterface;
/**
 * W9FormResponse Class Doc Comment
 *
 * @category Class
 * @package  Avalara\SDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class W9FormResponse extends W9FormBaseResponse
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'W9FormResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'name' => 'string',
        'business_name' => 'string',
        'business_classification' => 'string',
        'business_other' => 'string',
        'foreign_partner_owner_or_beneficiary' => 'bool',
        'exempt_payee_code' => 'string',
        'exempt_fatca_code' => 'string',
        'foreign_country_indicator' => 'bool',
        'address' => 'string',
        'foreign_address' => 'string',
        'city' => 'string',
        'state' => 'string',
        'zip' => 'string',
        'account_number' => 'string',
        'tin_type' => 'string',
        'tin' => 'string',
        'backup_withholding' => 'bool',
        'is1099able' => 'bool',
        'tin_match_status' => '\Avalara\SDK\Model\A1099\V2\TinMatchStatusResponse'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'name' => null,
        'business_name' => null,
        'business_classification' => null,
        'business_other' => null,
        'foreign_partner_owner_or_beneficiary' => null,
        'exempt_payee_code' => null,
        'exempt_fatca_code' => null,
        'foreign_country_indicator' => null,
        'address' => null,
        'foreign_address' => null,
        'city' => null,
        'state' => null,
        'zip' => null,
        'account_number' => null,
        'tin_type' => null,
        'tin' => null,
        'backup_withholding' => null,
        'is1099able' => null,
        'tin_match_status' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes + parent::openAPITypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats + parent::openAPIFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'name' => 'name',
        'business_name' => 'businessName',
        'business_classification' => 'businessClassification',
        'business_other' => 'businessOther',
        'foreign_partner_owner_or_beneficiary' => 'foreignPartnerOwnerOrBeneficiary',
        'exempt_payee_code' => 'exemptPayeeCode',
        'exempt_fatca_code' => 'exemptFatcaCode',
        'foreign_country_indicator' => 'foreignCountryIndicator',
        'address' => 'address',
        'foreign_address' => 'foreignAddress',
        'city' => 'city',
        'state' => 'state',
        'zip' => 'zip',
        'account_number' => 'accountNumber',
        'tin_type' => 'tinType',
        'tin' => 'tin',
        'backup_withholding' => 'backupWithholding',
        'is1099able' => 'is1099able',
        'tin_match_status' => 'tinMatchStatus'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'name' => 'setName',
        'business_name' => 'setBusinessName',
        'business_classification' => 'setBusinessClassification',
        'business_other' => 'setBusinessOther',
        'foreign_partner_owner_or_beneficiary' => 'setForeignPartnerOwnerOrBeneficiary',
        'exempt_payee_code' => 'setExemptPayeeCode',
        'exempt_fatca_code' => 'setExemptFatcaCode',
        'foreign_country_indicator' => 'setForeignCountryIndicator',
        'address' => 'setAddress',
        'foreign_address' => 'setForeignAddress',
        'city' => 'setCity',
        'state' => 'setState',
        'zip' => 'setZip',
        'account_number' => 'setAccountNumber',
        'tin_type' => 'setTinType',
        'tin' => 'setTin',
        'backup_withholding' => 'setBackupWithholding',
        'is1099able' => 'setIs1099able',
        'tin_match_status' => 'setTinMatchStatus'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'name' => 'getName',
        'business_name' => 'getBusinessName',
        'business_classification' => 'getBusinessClassification',
        'business_other' => 'getBusinessOther',
        'foreign_partner_owner_or_beneficiary' => 'getForeignPartnerOwnerOrBeneficiary',
        'exempt_payee_code' => 'getExemptPayeeCode',
        'exempt_fatca_code' => 'getExemptFatcaCode',
        'foreign_country_indicator' => 'getForeignCountryIndicator',
        'address' => 'getAddress',
        'foreign_address' => 'getForeignAddress',
        'city' => 'getCity',
        'state' => 'getState',
        'zip' => 'getZip',
        'account_number' => 'getAccountNumber',
        'tin_type' => 'getTinType',
        'tin' => 'getTin',
        'backup_withholding' => 'getBackupWithholding',
        'is1099able' => 'getIs1099able',
        'tin_match_status' => 'getTinMatchStatus'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }



    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['name'] = $data['name'] ?? null;
        $this->container['business_name'] = $data['business_name'] ?? null;
        $this->container['business_classification'] = $data['business_classification'] ?? null;
        $this->container['business_other'] = $data['business_other'] ?? null;
        $this->container['foreign_partner_owner_or_beneficiary'] = $data['foreign_partner_owner_or_beneficiary'] ?? null;
        $this->container['exempt_payee_code'] = $data['exempt_payee_code'] ?? null;
        $this->container['exempt_fatca_code'] = $data['exempt_fatca_code'] ?? null;
        $this->container['foreign_country_indicator'] = $data['foreign_country_indicator'] ?? null;
        $this->container['address'] = $data['address'] ?? null;
        $this->container['foreign_address'] = $data['foreign_address'] ?? null;
        $this->container['city'] = $data['city'] ?? null;
        $this->container['state'] = $data['state'] ?? null;
        $this->container['zip'] = $data['zip'] ?? null;
        $this->container['account_number'] = $data['account_number'] ?? null;
        $this->container['tin_type'] = $data['tin_type'] ?? null;
        $this->container['tin'] = $data['tin'] ?? null;
        $this->container['backup_withholding'] = $data['backup_withholding'] ?? null;
        $this->container['is1099able'] = $data['is1099able'] ?? null;
        $this->container['tin_match_status'] = $data['tin_match_status'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name The name of the individual or entity associated with the form.
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets business_name
     *
     * @return string|null
     */
    public function getBusinessName()
    {
        return $this->container['business_name'];
    }

    /**
     * Sets business_name
     *
     * @param string|null $business_name The name of the business associated with the form.
     *
     * @return self
     */
    public function setBusinessName($business_name)
    {
        $this->container['business_name'] = $business_name;

        return $this;
    }

    /**
     * Gets business_classification
     *
     * @return string|null
     */
    public function getBusinessClassification()
    {
        return $this->container['business_classification'];
    }

    /**
     * Sets business_classification
     *
     * @param string|null $business_classification The classification of the business.
     *
     * @return self
     */
    public function setBusinessClassification($business_classification)
    {
        $this->container['business_classification'] = $business_classification;

        return $this;
    }

    /**
     * Gets business_other
     *
     * @return string|null
     */
    public function getBusinessOther()
    {
        return $this->container['business_other'];
    }

    /**
     * Sets business_other
     *
     * @param string|null $business_other The classification description when \"businessClassification\" is \"Other\".
     *
     * @return self
     */
    public function setBusinessOther($business_other)
    {
        $this->container['business_other'] = $business_other;

        return $this;
    }

    /**
     * Gets foreign_partner_owner_or_beneficiary
     *
     * @return bool|null
     */
    public function getForeignPartnerOwnerOrBeneficiary()
    {
        return $this->container['foreign_partner_owner_or_beneficiary'];
    }

    /**
     * Sets foreign_partner_owner_or_beneficiary
     *
     * @param bool|null $foreign_partner_owner_or_beneficiary Indicates whether the individual is a foreign partner, owner, or beneficiary.
     *
     * @return self
     */
    public function setForeignPartnerOwnerOrBeneficiary($foreign_partner_owner_or_beneficiary)
    {
        $this->container['foreign_partner_owner_or_beneficiary'] = $foreign_partner_owner_or_beneficiary;

        return $this;
    }

    /**
     * Gets exempt_payee_code
     *
     * @return string|null
     */
    public function getExemptPayeeCode()
    {
        return $this->container['exempt_payee_code'];
    }

    /**
     * Sets exempt_payee_code
     *
     * @param string|null $exempt_payee_code The exempt payee code.
     *
     * @return self
     */
    public function setExemptPayeeCode($exempt_payee_code)
    {
        $this->container['exempt_payee_code'] = $exempt_payee_code;

        return $this;
    }

    /**
     * Gets exempt_fatca_code
     *
     * @return string|null
     */
    public function getExemptFatcaCode()
    {
        return $this->container['exempt_fatca_code'];
    }

    /**
     * Sets exempt_fatca_code
     *
     * @param string|null $exempt_fatca_code The exemption from FATCA reporting code.
     *
     * @return self
     */
    public function setExemptFatcaCode($exempt_fatca_code)
    {
        $this->container['exempt_fatca_code'] = $exempt_fatca_code;

        return $this;
    }

    /**
     * Gets foreign_country_indicator
     *
     * @return bool|null
     */
    public function getForeignCountryIndicator()
    {
        return $this->container['foreign_country_indicator'];
    }

    /**
     * Sets foreign_country_indicator
     *
     * @param bool|null $foreign_country_indicator Indicates whether the individual or entity is in a foreign country.
     *
     * @return self
     */
    public function setForeignCountryIndicator($foreign_country_indicator)
    {
        $this->container['foreign_country_indicator'] = $foreign_country_indicator;

        return $this;
    }

    /**
     * Gets address
     *
     * @return string|null
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param string|null $address The address of the individual or entity.
     *
     * @return self
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets foreign_address
     *
     * @return string|null
     */
    public function getForeignAddress()
    {
        return $this->container['foreign_address'];
    }

    /**
     * Sets foreign_address
     *
     * @param string|null $foreign_address The foreign address of the individual or entity.
     *
     * @return self
     */
    public function setForeignAddress($foreign_address)
    {
        $this->container['foreign_address'] = $foreign_address;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string|null
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string|null $city The city of the address.
     *
     * @return self
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string|null
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string|null $state The state of the address.
     *
     * @return self
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets zip
     *
     * @return string|null
     */
    public function getZip()
    {
        return $this->container['zip'];
    }

    /**
     * Sets zip
     *
     * @param string|null $zip The ZIP code of the address.
     *
     * @return self
     */
    public function setZip($zip)
    {
        $this->container['zip'] = $zip;

        return $this;
    }

    /**
     * Gets account_number
     *
     * @return string|null
     */
    public function getAccountNumber()
    {
        return $this->container['account_number'];
    }

    /**
     * Sets account_number
     *
     * @param string|null $account_number The account number associated with the form.
     *
     * @return self
     */
    public function setAccountNumber($account_number)
    {
        $this->container['account_number'] = $account_number;

        return $this;
    }

    /**
     * Gets tin_type
     *
     * @return string|null
     */
    public function getTinType()
    {
        return $this->container['tin_type'];
    }

    /**
     * Sets tin_type
     *
     * @param string|null $tin_type The type of TIN provided.
     *
     * @return self
     */
    public function setTinType($tin_type)
    {
        $this->container['tin_type'] = $tin_type;

        return $this;
    }

    /**
     * Gets tin
     *
     * @return string|null
     */
    public function getTin()
    {
        return $this->container['tin'];
    }

    /**
     * Sets tin
     *
     * @param string|null $tin The taxpayer identification number (TIN).
     *
     * @return self
     */
    public function setTin($tin)
    {
        $this->container['tin'] = $tin;

        return $this;
    }

    /**
     * Gets backup_withholding
     *
     * @return bool|null
     */
    public function getBackupWithholding()
    {
        return $this->container['backup_withholding'];
    }

    /**
     * Sets backup_withholding
     *
     * @param bool|null $backup_withholding Indicates whether backup withholding applies.
     *
     * @return self
     */
    public function setBackupWithholding($backup_withholding)
    {
        $this->container['backup_withholding'] = $backup_withholding;

        return $this;
    }

    /**
     * Gets is1099able
     *
     * @return bool|null
     */
    public function getIs1099able()
    {
        return $this->container['is1099able'];
    }

    /**
     * Sets is1099able
     *
     * @param bool|null $is1099able Indicates whether the individual or entity should be issued a 1099 form.
     *
     * @return self
     */
    public function setIs1099able($is1099able)
    {
        $this->container['is1099able'] = $is1099able;

        return $this;
    }

    /**
     * Gets tin_match_status
     *
     * @return \Avalara\SDK\Model\A1099\V2\TinMatchStatusResponse|null
     */
    public function getTinMatchStatus()
    {
        return $this->container['tin_match_status'];
    }

    /**
     * Sets tin_match_status
     *
     * @param \Avalara\SDK\Model\A1099\V2\TinMatchStatusResponse|null $tin_match_status The TIN Match status from IRS.
     *
     * @return self
     */
    public function setTinMatchStatus($tin_match_status)
    {
        $this->container['tin_match_status'] = $tin_match_status;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset):bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset):mixed
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value):void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset):void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize():mixed
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString():string
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue():string
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


