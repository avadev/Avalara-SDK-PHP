<?php
/**
 * CoveredIndividualReference
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Avalara\SDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/*
 * AvaTax Software Development Kit for PHP
 *
 * (c) 2004-2025 Avalara, Inc.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * Avalara 1099 & W-9 API Definition
 *
 * ## 🔐 Authentication  Use **username/password** or generate a **license key** from: *Avalara Portal → Settings → License and API Keys*.  [More on authentication methods](https://developer.avalara.com/avatax-dm-combined-erp/common-setup/authentication/authentication-methods/)  [Test your credentials](https://developer.avalara.com/avatax/test-credentials/)  ## 📘 API & SDK Documentation  [Avalara SDK (.NET) on GitHub](https://github.com/avadev/Avalara-SDK-DotNet#avalarasdk--the-unified-c-library-for-next-gen-avalara-services)  [Code Examples – 1099 API](https://github.com/avadev/Avalara-SDK-DotNet/blob/main/docs/A1099/V2/Class1099IssuersApi.md#call1099issuersget)
 *
 * @category   Avalara client libraries
 * @package    Avalara\SDK\API\A1099\V2
 * @author     Sachin Baijal <sachin.baijal@avalara.com>
 * @author     Jonathan Wenger <jonathan.wenger@avalara.com>
 * @copyright  2004-2025 Avalara, Inc.
 * @license    https://www.apache.org/licenses/LICENSE-2.0
 * @link       https://github.com/avadev/AvaTax-REST-V3-PHP-SDK

 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Avalara\SDK\Model\A1099\V2;

use \ArrayAccess;
use \Avalara\SDK\ObjectSerializer;
use \Avalara\SDK\Model\ModelInterface;
/**
 * CoveredIndividualReference Class Doc Comment
 *
 * @category Class
 * @package  Avalara\SDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class CoveredIndividualReference implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CoveredIndividualReference';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'first_name' => 'string',
        'middle_name' => 'string',
        'last_name' => 'string',
        'name_suffix' => 'string',
        'tin' => 'string',
        'birth_date' => '\DateTime',
        'covered_month0' => 'bool',
        'covered_month1' => 'bool',
        'covered_month2' => 'bool',
        'covered_month3' => 'bool',
        'covered_month4' => 'bool',
        'covered_month5' => 'bool',
        'covered_month6' => 'bool',
        'covered_month7' => 'bool',
        'covered_month8' => 'bool',
        'covered_month9' => 'bool',
        'covered_month10' => 'bool',
        'covered_month11' => 'bool',
        'covered_month12' => 'bool',
        'id' => 'string',
        'type' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'first_name' => null,
        'middle_name' => null,
        'last_name' => null,
        'name_suffix' => null,
        'tin' => null,
        'birth_date' => 'date-time',
        'covered_month0' => null,
        'covered_month1' => null,
        'covered_month2' => null,
        'covered_month3' => null,
        'covered_month4' => null,
        'covered_month5' => null,
        'covered_month6' => null,
        'covered_month7' => null,
        'covered_month8' => null,
        'covered_month9' => null,
        'covered_month10' => null,
        'covered_month11' => null,
        'covered_month12' => null,
        'id' => null,
        'type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'first_name' => 'firstName',
        'middle_name' => 'middleName',
        'last_name' => 'lastName',
        'name_suffix' => 'nameSuffix',
        'tin' => 'tin',
        'birth_date' => 'birthDate',
        'covered_month0' => 'coveredMonth0',
        'covered_month1' => 'coveredMonth1',
        'covered_month2' => 'coveredMonth2',
        'covered_month3' => 'coveredMonth3',
        'covered_month4' => 'coveredMonth4',
        'covered_month5' => 'coveredMonth5',
        'covered_month6' => 'coveredMonth6',
        'covered_month7' => 'coveredMonth7',
        'covered_month8' => 'coveredMonth8',
        'covered_month9' => 'coveredMonth9',
        'covered_month10' => 'coveredMonth10',
        'covered_month11' => 'coveredMonth11',
        'covered_month12' => 'coveredMonth12',
        'id' => 'id',
        'type' => 'type'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'first_name' => 'setFirstName',
        'middle_name' => 'setMiddleName',
        'last_name' => 'setLastName',
        'name_suffix' => 'setNameSuffix',
        'tin' => 'setTin',
        'birth_date' => 'setBirthDate',
        'covered_month0' => 'setCoveredMonth0',
        'covered_month1' => 'setCoveredMonth1',
        'covered_month2' => 'setCoveredMonth2',
        'covered_month3' => 'setCoveredMonth3',
        'covered_month4' => 'setCoveredMonth4',
        'covered_month5' => 'setCoveredMonth5',
        'covered_month6' => 'setCoveredMonth6',
        'covered_month7' => 'setCoveredMonth7',
        'covered_month8' => 'setCoveredMonth8',
        'covered_month9' => 'setCoveredMonth9',
        'covered_month10' => 'setCoveredMonth10',
        'covered_month11' => 'setCoveredMonth11',
        'covered_month12' => 'setCoveredMonth12',
        'id' => 'setId',
        'type' => 'setType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'first_name' => 'getFirstName',
        'middle_name' => 'getMiddleName',
        'last_name' => 'getLastName',
        'name_suffix' => 'getNameSuffix',
        'tin' => 'getTin',
        'birth_date' => 'getBirthDate',
        'covered_month0' => 'getCoveredMonth0',
        'covered_month1' => 'getCoveredMonth1',
        'covered_month2' => 'getCoveredMonth2',
        'covered_month3' => 'getCoveredMonth3',
        'covered_month4' => 'getCoveredMonth4',
        'covered_month5' => 'getCoveredMonth5',
        'covered_month6' => 'getCoveredMonth6',
        'covered_month7' => 'getCoveredMonth7',
        'covered_month8' => 'getCoveredMonth8',
        'covered_month9' => 'getCoveredMonth9',
        'covered_month10' => 'getCoveredMonth10',
        'covered_month11' => 'getCoveredMonth11',
        'covered_month12' => 'getCoveredMonth12',
        'id' => 'getId',
        'type' => 'getType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['first_name'] = $data['first_name'] ?? null;
        $this->container['middle_name'] = $data['middle_name'] ?? null;
        $this->container['last_name'] = $data['last_name'] ?? null;
        $this->container['name_suffix'] = $data['name_suffix'] ?? null;
        $this->container['tin'] = $data['tin'] ?? null;
        $this->container['birth_date'] = $data['birth_date'] ?? null;
        $this->container['covered_month0'] = $data['covered_month0'] ?? null;
        $this->container['covered_month1'] = $data['covered_month1'] ?? null;
        $this->container['covered_month2'] = $data['covered_month2'] ?? null;
        $this->container['covered_month3'] = $data['covered_month3'] ?? null;
        $this->container['covered_month4'] = $data['covered_month4'] ?? null;
        $this->container['covered_month5'] = $data['covered_month5'] ?? null;
        $this->container['covered_month6'] = $data['covered_month6'] ?? null;
        $this->container['covered_month7'] = $data['covered_month7'] ?? null;
        $this->container['covered_month8'] = $data['covered_month8'] ?? null;
        $this->container['covered_month9'] = $data['covered_month9'] ?? null;
        $this->container['covered_month10'] = $data['covered_month10'] ?? null;
        $this->container['covered_month11'] = $data['covered_month11'] ?? null;
        $this->container['covered_month12'] = $data['covered_month12'] ?? null;
        $this->container['id'] = $data['id'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets first_name
     *
     * @return string|null
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string|null $first_name first_name
     *
     * @return self
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets middle_name
     *
     * @return string|null
     */
    public function getMiddleName()
    {
        return $this->container['middle_name'];
    }

    /**
     * Sets middle_name
     *
     * @param string|null $middle_name middle_name
     *
     * @return self
     */
    public function setMiddleName($middle_name)
    {
        $this->container['middle_name'] = $middle_name;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string|null
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string|null $last_name last_name
     *
     * @return self
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets name_suffix
     *
     * @return string|null
     */
    public function getNameSuffix()
    {
        return $this->container['name_suffix'];
    }

    /**
     * Sets name_suffix
     *
     * @param string|null $name_suffix name_suffix
     *
     * @return self
     */
    public function setNameSuffix($name_suffix)
    {
        $this->container['name_suffix'] = $name_suffix;

        return $this;
    }

    /**
     * Gets tin
     *
     * @return string|null
     */
    public function getTin()
    {
        return $this->container['tin'];
    }

    /**
     * Sets tin
     *
     * @param string|null $tin tin
     *
     * @return self
     */
    public function setTin($tin)
    {
        $this->container['tin'] = $tin;

        return $this;
    }

    /**
     * Gets birth_date
     *
     * @return \DateTime|null
     */
    public function getBirthDate()
    {
        return $this->container['birth_date'];
    }

    /**
     * Sets birth_date
     *
     * @param \DateTime|null $birth_date birth_date
     *
     * @return self
     */
    public function setBirthDate($birth_date)
    {
        $this->container['birth_date'] = $birth_date;

        return $this;
    }

    /**
     * Gets covered_month0
     *
     * @return bool|null
     */
    public function getCoveredMonth0()
    {
        return $this->container['covered_month0'];
    }

    /**
     * Sets covered_month0
     *
     * @param bool|null $covered_month0 covered_month0
     *
     * @return self
     */
    public function setCoveredMonth0($covered_month0)
    {
        $this->container['covered_month0'] = $covered_month0;

        return $this;
    }

    /**
     * Gets covered_month1
     *
     * @return bool|null
     */
    public function getCoveredMonth1()
    {
        return $this->container['covered_month1'];
    }

    /**
     * Sets covered_month1
     *
     * @param bool|null $covered_month1 covered_month1
     *
     * @return self
     */
    public function setCoveredMonth1($covered_month1)
    {
        $this->container['covered_month1'] = $covered_month1;

        return $this;
    }

    /**
     * Gets covered_month2
     *
     * @return bool|null
     */
    public function getCoveredMonth2()
    {
        return $this->container['covered_month2'];
    }

    /**
     * Sets covered_month2
     *
     * @param bool|null $covered_month2 covered_month2
     *
     * @return self
     */
    public function setCoveredMonth2($covered_month2)
    {
        $this->container['covered_month2'] = $covered_month2;

        return $this;
    }

    /**
     * Gets covered_month3
     *
     * @return bool|null
     */
    public function getCoveredMonth3()
    {
        return $this->container['covered_month3'];
    }

    /**
     * Sets covered_month3
     *
     * @param bool|null $covered_month3 covered_month3
     *
     * @return self
     */
    public function setCoveredMonth3($covered_month3)
    {
        $this->container['covered_month3'] = $covered_month3;

        return $this;
    }

    /**
     * Gets covered_month4
     *
     * @return bool|null
     */
    public function getCoveredMonth4()
    {
        return $this->container['covered_month4'];
    }

    /**
     * Sets covered_month4
     *
     * @param bool|null $covered_month4 covered_month4
     *
     * @return self
     */
    public function setCoveredMonth4($covered_month4)
    {
        $this->container['covered_month4'] = $covered_month4;

        return $this;
    }

    /**
     * Gets covered_month5
     *
     * @return bool|null
     */
    public function getCoveredMonth5()
    {
        return $this->container['covered_month5'];
    }

    /**
     * Sets covered_month5
     *
     * @param bool|null $covered_month5 covered_month5
     *
     * @return self
     */
    public function setCoveredMonth5($covered_month5)
    {
        $this->container['covered_month5'] = $covered_month5;

        return $this;
    }

    /**
     * Gets covered_month6
     *
     * @return bool|null
     */
    public function getCoveredMonth6()
    {
        return $this->container['covered_month6'];
    }

    /**
     * Sets covered_month6
     *
     * @param bool|null $covered_month6 covered_month6
     *
     * @return self
     */
    public function setCoveredMonth6($covered_month6)
    {
        $this->container['covered_month6'] = $covered_month6;

        return $this;
    }

    /**
     * Gets covered_month7
     *
     * @return bool|null
     */
    public function getCoveredMonth7()
    {
        return $this->container['covered_month7'];
    }

    /**
     * Sets covered_month7
     *
     * @param bool|null $covered_month7 covered_month7
     *
     * @return self
     */
    public function setCoveredMonth7($covered_month7)
    {
        $this->container['covered_month7'] = $covered_month7;

        return $this;
    }

    /**
     * Gets covered_month8
     *
     * @return bool|null
     */
    public function getCoveredMonth8()
    {
        return $this->container['covered_month8'];
    }

    /**
     * Sets covered_month8
     *
     * @param bool|null $covered_month8 covered_month8
     *
     * @return self
     */
    public function setCoveredMonth8($covered_month8)
    {
        $this->container['covered_month8'] = $covered_month8;

        return $this;
    }

    /**
     * Gets covered_month9
     *
     * @return bool|null
     */
    public function getCoveredMonth9()
    {
        return $this->container['covered_month9'];
    }

    /**
     * Sets covered_month9
     *
     * @param bool|null $covered_month9 covered_month9
     *
     * @return self
     */
    public function setCoveredMonth9($covered_month9)
    {
        $this->container['covered_month9'] = $covered_month9;

        return $this;
    }

    /**
     * Gets covered_month10
     *
     * @return bool|null
     */
    public function getCoveredMonth10()
    {
        return $this->container['covered_month10'];
    }

    /**
     * Sets covered_month10
     *
     * @param bool|null $covered_month10 covered_month10
     *
     * @return self
     */
    public function setCoveredMonth10($covered_month10)
    {
        $this->container['covered_month10'] = $covered_month10;

        return $this;
    }

    /**
     * Gets covered_month11
     *
     * @return bool|null
     */
    public function getCoveredMonth11()
    {
        return $this->container['covered_month11'];
    }

    /**
     * Sets covered_month11
     *
     * @param bool|null $covered_month11 covered_month11
     *
     * @return self
     */
    public function setCoveredMonth11($covered_month11)
    {
        $this->container['covered_month11'] = $covered_month11;

        return $this;
    }

    /**
     * Gets covered_month12
     *
     * @return bool|null
     */
    public function getCoveredMonth12()
    {
        return $this->container['covered_month12'];
    }

    /**
     * Sets covered_month12
     *
     * @param bool|null $covered_month12 covered_month12
     *
     * @return self
     */
    public function setCoveredMonth12($covered_month12)
    {
        $this->container['covered_month12'] = $covered_month12;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset):bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset):mixed
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value):void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset):void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize():mixed
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString():string
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue():string
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


